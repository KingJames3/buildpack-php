#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# Heroku Revision.
#
# Affixed to all vendored binary output to represent changes to the
# compilation environment without a change to the upstream version,
# e.g. PHP 5.3.27 without, and then subsequently with, libmcrypt.
heroku_rev='-1'

# config
MCRYPT_VERSION="2.5.8"
APACHE_VERSION="2.2.25"
APACHE_PATH="apache"
PHP_VERSION="5.3.27"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# composer
export COMPOSER_HOME="${CACHE_DIR}/.composer"
COMPOSER_URL="http://117.121.14.61/composer.phar"
echo "==========1"
# include .files when moving things around
shopt -s dotglob

# composer
mkdir -p $BUILD_DIR $CACHE_DIR ${BUNDLE_DIR} ${BUILD_DIR}/local ${BUILD_DIR}/vendor/bin ${COMPOSER_HOME}

echo "==========2"
cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

MCRYPT_URL="http://117.121.14.61/mcrypt-""$MCRYPT_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling mcrypt version $MCRYPT_VERSION"
curl --silent --max-time 60 --location "$MCRYPT_URL" | tar xz

APACHE_URL="http://117.121.14.61/apache-""$APACHE_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="http://117.121.14.61/php-$PHP_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

echo "==========3"
# composer
# Composer Installation
pushd ${BUILD_DIR} > /dev/null
if [ -f "composer.json" ]
then
  echo "-----> Installing dependencies using Composer"
  GIT_DIR_ORIG=${GIT_DIR}
  unset GIT_DIR

  if [ ! -f "composer.phar" ]
  then
    echo "Fetching composer.phar"
    echo ${COMPOSER_URL} 
   # download_url ${COMPOSER_URL}
   curl --silent --max-time 60 --location "${COMPOSER_URL}" | tar xz
  fi

  # do the deed!
  echo "Running: php composer.phar install" 
  #LD_LIBRARY_PATH="${BUILD_DIR}/local/lib" ${BUILD_DIR}/vendor/php/bin/php composer.phar install -n
  LD_LIBRARY_PATH="${BUILD_DIR}/local/lib" /app/php/bin/php composer.phar install -n

  export GIT_DIR=${GIT_DIR_ORIG}
fi
popd > /dev/null
echo "==========4"
# check if we have Propel Migrations to run
#if [ -f www/vendor/bin/propel-gen ]; then
#  export LD_LIBRARY_PATH=$BUILD_DIR/php/ext
#  export PATH=$BUILD_DIR/php/bin:$PATH
#  echo "-----> Running Propel migrations"
#  cd www
#  vendor/bin/propel-gen ./ -Dpropel.buildtime.conf.file=herokutime-conf.xml migrate
#  cd $BUILD_DIR
#fi

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/lib/php
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR
